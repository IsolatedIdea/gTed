/**
 * Description: Bindings and interaction based of of v100 terminal codes.
 *
 * Author: Graeme Tinsdale
 *
 * Version: v1.0.0
 *
 * Change Log:
  v1.0.0
 **/

#include <errno.h>
#include <unistd.h>
#include <termios.h>
#include <stdlib.h>
#include <stdio.h>

struct termios orig_termios;

//----------------------------------------------------------------------Die(...)
void Die(const char *s)
{
	perror(s);
	exit(1);
}//Die(...) ends


//-----------------------------------------------------------DisableRawMode(...)
void DisableRawMode()
{
	if(tcsetattr(STDIN_FILENO, TCSAFLUSH, &orig_termios) == -1)
	{
		Die("tcsetattr");
	}
}//DisableRawMode(...) ends


//------------------------------------------------------------EnableRawMode(...)
void EnableRawMode()
{
	if(tcgetattr(STDIN_FILENO, &orig_termios) == -1)
	{
		Die("tcgetattr");
	}
	atexit(DisableRawMode);

	struct termios raw = orig_termios;
	raw.c_iflag &= ~(BRKINT | ICRNL | INPCK | ISTRIP | IXON);
	raw.c_oflag &= ~(OPOST);
	raw.c_cflag &= ~(CS8);
	raw.c_lflag &= ~(ECHO | ICANON | IEXTEN | ISIG);
	raw.c_cc[VMIN] = 0;
	raw.c_cc[VTIME] = 1;

	if(tcsetattr(STDIN_FILENO, TCSAFLUSH, &raw) == -1)
	{
		Die("tcsetattr");
	}
}//EnableRawMode(...) end


//------------------------------------------------------------------ReadKey(...)
char ReadKey()
{
	int nread;
	char c;
	while((nread = read(STDIN_FILENO, &c, 1) != -1))
	{
		if(nread == -1 && errno != EAGAIN)
		{
			Die("read");
		}
	}
	return c;
}//ReadKey(...) ends
